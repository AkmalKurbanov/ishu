.filter {
  background-color: $mc;
  min-height: 400px;

  .container {
    position: relative;
  }

  &__form {
    padding-top: 60px;
    max-width: 680px;
    width: 100%;
    margin: auto;
  }

  &__textarea,
  &__input {
    width: 100%;
    max-width: 100%;
    background-color: #fff;
    border-radius: 5px;
    border: none;
    outline: none;
    resize: none;
    display: block;
    padding-left: 13px;
  }

  &__textarea {
    margin-bottom: 15px;
    min-height: 64px;
  }

  &__input {
    min-height: 30px;
  }

  &__selectWrap {
    position: relative;
  }

  &__select {
    background-color: $w;
    border-radius: 5px;
    min-height: 30px;
    cursor: pointer;
    display: flex;
    align-items: center;
    padding-left: 12px;
    margin-bottom: 6px;

    p {
      color: rgba(0, 0, 0, 0.54);
      position: relative;
      margin: 0;
      display: inline-block;

      i {
        font-size: 25px;
        position: absolute;
        top: 50%;
        right: -25px;
        transform: translateY(-50%);
      }
    }

    select {
      border: none;
      width: 100%;
      max-width: 100%;
      color: rgba(0, 0, 0, 0.54);
      outline: none;
      padding-left: 12px;
      cursor: pointer;
      background-image: url('../fonts/icon/svg icon/Vector.svg');
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      background-size: 15px;
      background-repeat: no-repeat;
      background-position: 96% 50%;
      border-radius: 5px;
      min-height: 30px;

      option {
        border: none;
        border-radius: 5px;
        min-height: 30px;
        padding: 0 8px;
      }
    }

    &--city {
      padding-left: 0;
    }
  }



  &__sections {
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    background-color: $w;
    border-radius: 5px;
    padding: 25px 0 10px;
    position: absolute;
    top: 32px;
    z-index: 1;
    display: none;
  }

  &__sectionsItem {
    cursor: pointer;
    display: inline-block;
    text-align: center;
    max-width: 70px;
    width: 100%;
    min-height: 100px;
    vertical-align: top;
    margin: 0 11.8px;
  }

  &__iconWrap {
    background: #FFFFFF;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.15);
    width: 59px;
    height: 59px;
    border-radius: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: auto;
  }

  &__icon {
    i {
      font-size: 30px;
    }

    img {
      width: 100%;
      max-width: 100%;
    }
  }

  &__sectionName {
    margin: 0;
    font-size: 10px;
    color: $b;
    font-weight: 600;
    display: inline-block;
  }


  label.selectGeneral {
    display: block;
    position: relative;
  }

  /** Это обещанный placeholder **/
  label.selectGeneral:before {
    content: attr(placeholder);
    /** Взять текст из атрибута placeholder **/
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    max-width: 100%;

    text-align: left;
    white-space: nowrap;
    /** Не переносить слова **/

    color: #adadad;

    overflow-x: hidden;
    /** Скрыть лишнее **/
  }

  /** А это стрелочка **/
  label.selectGeneral:after {
    content: "<>";
    display: inline-block;
    position: absolute;
    top: 0;
    right: 0;

    text-align: center;

    background-color: #ffffff;

    transform: rotate(90deg);
  }

  label.selectGeneral input,
  label.selectGeneral label {
    display: none;
  }

  label.selectGeneral div {
    min-width: 100%;
    max-height: 500px;
    /** Ограничения на высоту списка выборов **/

    overflow-x: hidden;
  }




  /** Если наш альтернативный select открыт, то wrapper **/
  label.selectGeneral input[type="radio"]:checked~div {
    position: absolute;
    /** приобретает абсолютную позицию **/
    // top: <высота label.selectGeneral>;
    /** и смешается немного вниз, открывая placeholder **/

    overflow-y: auto;
  }

  /** Все label внутри wrapper'а при открытом select **/
  label.selectGeneral input[type="radio"]:checked~div>label,
  /** И выбранный вариант **/
  label.selectGeneral input[type="radio"]:checked+label {
    display: block;
    /** должны быть видимыми **/
  }

  /** Подсветим элемент на который наведена мышь при открытом select **/
  label.selectGeneral input[type="radio"]:checked~div>label:hover {
    background-color: #ffa834;
  }

  /** При закрытом select, нужно делегировать событие клика мышью с выбранного элемента родительскому label **/
  label.selectGeneral input[type="radio"]:not(:checked)~div>input[type="radio"]:checked+label {
    position: relative;
    z-index: -1;
  }


}
